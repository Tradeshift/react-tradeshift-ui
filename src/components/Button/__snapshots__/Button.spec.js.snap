exports[`Button renders with default props 1`] = `
ShallowWrapper {
  "complexSelector": ComplexSelector {
    "buildPredicate": [Function],
    "childrenOfNode": [Function],
    "findWhereUnwrapped": [Function],
  },
  "length": 1,
  "node": <button
    data-classes={Array []}
    data-ts="Button"
    data-ts.busy={false}
    id="">
    <span>
        Default Button
    </span>
</button>,
  "nodes": Array [
    <button
      data-classes={Array []}
      data-ts="Button"
      data-ts.busy={false}
      id="">
      <span>
            Default Button
      </span>
</button>,
  ],
  "options": Object {},
  "renderer": ReactShallowRenderer {
    "_instance": ShallowComponentWrapper {
      "_calledComponentWillUnmount": false,
      "_compositeType": 0,
      "_context": Object {},
      "_currentElement": <Button
        busy={false}
        classes={Array []}
        id="">
        <span>
                Default Button
        </span>
</Button>,
      "_debugID": 1,
      "_hostContainerInfo": null,
      "_hostParent": null,
      "_instance": Button {
        "_reactInternalInstance": [Circular],
        "context": Object {},
        "props": Object {
          "busy": false,
          "children": <span>
            Default Button
</span>,
          "classes": Array [],
          "id": "",
        },
        "refs": Object {},
        "state": null,
        "updater": Object {
          "enqueueCallback": [Function],
          "enqueueCallbackInternal": [Function],
          "enqueueElementInternal": [Function],
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
          "validateCallback": [Function],
        },
      },
      "_mountOrder": 1,
      "_pendingCallbacks": null,
      "_pendingElement": null,
      "_pendingForceUpdate": false,
      "_pendingReplaceState": false,
      "_pendingStateQueue": null,
      "_renderedComponent": NoopInternalComponent {
        "_currentElement": <button
          data-classes={Array []}
          data-ts="Button"
          data-ts.busy={false}
          id="">
          <span>
                    Default Button
          </span>
</button>,
        "_debugID": 2,
        "_renderedOutput": <button
          data-classes={Array []}
          data-ts="Button"
          data-ts.busy={false}
          id="">
          <span>
                    Default Button
          </span>
</button>,
      },
      "_renderedNodeType": 0,
      "_rootNodeID": 0,
      "_topLevelWrapper": null,
      "_updateBatchNumber": null,
      "_warnedAboutRefsInRender": false,
    },
    "getRenderOutput": [Function],
    "render": [Function],
  },
  "root": [Circular],
  "unrendered": <Button
    busy={false}
    classes={Array []}
    id="">
    <span>
        Default Button
    </span>
</Button>,
}
`;
