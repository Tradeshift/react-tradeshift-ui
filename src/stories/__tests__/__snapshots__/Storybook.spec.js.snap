// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Aside Aside tabs 1`] = `
<portal>
  <aside
    data-ts="Aside"
    data-ts.autofocus={true}
    data-ts.busy=""
    data-ts.open={false}
    data-ts.title="Aside demo"
  >
    <div
      data-ts="Panels"
    >
      <div
        data-ts="Panel"
        data-ts.label="tab 0"
      >
        tab 0 content
      </div>
      <div
        data-ts="Panel"
        data-ts.label="tab 1"
      >
        tab 1 content
      </div>
    </div>
  </aside>
</portal>
`;

exports[`Aside Controlled mode 1`] = `
<portal>
  <aside
    className="aside-class"
    data-ts="Aside"
    data-ts.autofocus={true}
    data-ts.busy=""
    data-ts.open={false}
    data-ts.title="Aside demo"
  >
    <div
      data-ts="Panel"
    >
      <menu
        data-ts="Menu"
      >
        <li
          className=""
        >
          <button
            disabled={false}
            type="button"
          >
            <span>
              Menu item
            </span>
          </button>
        </li>
      </menu>
    </div>
  </aside>
</portal>
`;

exports[`Button Basic structure 1`] = `
<button
  data-ts="Button"
  data-ts.busy={false}
  type="button"
>
  <span>
    Default Button
  </span>
</button>
`;

exports[`Button Busy button 1`] = `
<button
  className="ts-primary"
  data-ts="Button"
  data-ts.busy={true}
  type="button"
>
  <span>
    Busy Button
  </span>
</button>
`;

exports[`Button Icon button 1`] = `
<button
  className="ts-primary"
  data-ts="Button"
  data-ts.busy={false}
  type="button"
>
  <i
    className="ts-icon-arrowright"
  />
</button>
`;

exports[`Button Micro button 1`] = `
<button
  className="ts-primary ts-micro"
  data-ts="Button"
  data-ts.busy={false}
  type="button"
>
  <span>
    Micro Button
  </span>
</button>
`;

exports[`Button Primary button 1`] = `
<button
  className="ts-primary"
  data-ts="Button"
  data-ts.busy={false}
  type="button"
>
  <span>
    Primary Button
  </span>
</button>
`;

exports[`Button Secondary button 1`] = `
<button
  className="ts-secondary"
  data-ts="Button"
  data-ts.busy={false}
  type="button"
>
  <span>
    Secondary Button
  </span>
</button>
`;

exports[`Button Tertiary button 1`] = `
<button
  className="ts-tertiary"
  data-ts="Button"
  data-ts.busy={false}
  type="button"
>
  <span>
    Tertiary Button
  </span>
</button>
`;

exports[`Buttons Basic structure 1`] = `
<menu
  data-ts="Buttons"
>
  <li>
    <button
      type="button"
    >
      <span>
        Button One
      </span>
    </button>
  </li>
  <li>
    <button
      type="button"
    >
      <span>
        Button Two
      </span>
    </button>
  </li>
</menu>
`;

exports[`Buttons Joined buttons 1`] = `
<menu
  className="ts-t-t ts-join"
  data-ts="Buttons"
>
  <li>
    <button
      type="button"
    >
      <span>
        Button One
      </span>
    </button>
  </li>
  <li>
    <button
      type="button"
    >
      <span>
        Button Two
      </span>
    </button>
  </li>
</menu>
`;

exports[`Footer Add notification badge 1`] = `null`;

exports[`Footer Open collaboration 1`] = `null`;

exports[`Footer Show buttons 1`] = `null`;

exports[`Form Basic structure 1`] = `
<form
  data-ts="Form"
/>
`;

exports[`Form FormSwitch 1`] = `
<form
  data-ts="Form"
>
  <fieldset>
    <span>
      Controlled mode
    </span>
    <label
      htmlFor="switch-one"
    >
      <span>
        Switch one
      </span>
      <input
        checked={true}
        disabled={false}
        id="switch-one"
        name=""
        onChange={[Function]}
        type="checkbox"
      />
    </label>
  </fieldset>
  <fieldset>
    <span>
      Uncontrolled mode
    </span>
    <label
      htmlFor="switch-two"
    >
      <span>
        Switch two
      </span>
      <input
        defaultChecked={true}
        disabled={false}
        id="switch-two"
        name=""
        onChange={[Function]}
        type="checkbox"
      />
    </label>
  </fieldset>
</form>
`;

exports[`Header Change the color 1`] = `null`;

exports[`Header Change the title 1`] = `null`;

exports[`Header Show buttons 1`] = `null`;

exports[`Menu Basic usage 1`] = `
<menu
  data-ts="Menu"
>
  <li
    className="ts-checked"
  >
    <button
      disabled={false}
      type="button"
    >
      <span>
        Menu item 1
      </span>
      <i
        className="ts-icon-checked"
      />
    </button>
  </li>
  <li
    className=""
  >
    <button
      disabled={false}
      type="button"
    >
      <span>
        Menu item 2
      </span>
    </button>
  </li>
</menu>
`;

exports[`Modal Controlled mode 1`] = `
<portal>
  <dialog
    className=""
    data-ts="Modal"
    data-ts.open={false}
    data-ts.title="Fullscreen Modal demo"
  >
    <div
      data-ts="Panel"
    >
      <main
        data-ts="Main"
      >
        <h1>
          A Modal Example
        </h1>
        <p>
          …
        </p>
        <p>
          <button
            className="ts-primary"
            onClick={[Function]}
            type="submit"
          >
            <span>
              Close the Modal
            </span>
          </button>
        </p>
      </main>
    </div>
  </dialog>
</portal>
`;

exports[`Modal Controlled mode with buttons 1`] = `
<portal>
  <dialog
    className=""
    data-ts="Modal"
    data-ts.open={false}
    data-ts.title="Fullscreen Modal demo"
  >
    <div
      data-ts="Panel"
    >
      <main
        data-ts="Main"
      >
        <h1>
          A Modal Example
        </h1>
        <p>
          …
        </p>
        <p>
          <button
            className="ts-primary"
            onClick={[Function]}
            type="submit"
          >
            <span>
              Close the Modal
            </span>
          </button>
        </p>
      </main>
    </div>
  </dialog>
</portal>
`;

exports[`Note Basic usage 1`] = `null`;

exports[`SideBar Controlled mode 1`] = `
<portal>
  <aside
    data-ts="SideBar"
    data-ts.open={false}
    data-ts.title="SideBar demo"
  >
    <div
      data-ts="Panel"
    >
      <menu
        data-ts="Menu"
      >
        <li
          className=""
        >
          <button
            disabled={false}
            type="button"
          >
            <span>
              Menu item
            </span>
          </button>
        </li>
      </menu>
    </div>
  </aside>
</portal>
`;

exports[`SideBar SideBar tabs 1`] = `
<portal>
  <aside
    data-ts="SideBar"
    data-ts.open={false}
    data-ts.title="SideBar demo"
  >
    <div
      data-ts="Panel"
      data-ts.label="tab 0"
    >
      tab 0 content
    </div>
    <div
      data-ts="Panel"
      data-ts.label="tab 1"
    >
      tab 1 content
    </div>
    <div
      data-ts="Panel"
      data-ts.label="tab 2"
    >
      tab 2 content
    </div>
  </aside>
</portal>
`;

exports[`Spinner Basic usage 1`] = `null`;

exports[`StatusBar (deprecated) Hide bar 1`] = `null`;

exports[`StatusBar (deprecated) Show buttons 1`] = `null`;

exports[`StatusBar (deprecated) Show message 1`] = `null`;

exports[`Table Basic usage 1`] = `null`;

exports[`Table Linkable table element 1`] = `null`;

exports[`Tag Label-Text 1`] = `
<figure
  data-ts="Tag"
  id="tag2"
/>
`;

exports[`Tag Tag with ondelete function 1`] = `
<figure
  data-ts="Tag"
  id="tag4"
/>
`;

exports[`Tag Tag with type 1`] = `
<figure
  data-ts="Tag"
  id="tag3"
/>
`;

exports[`Tag Text only 1`] = `
<figure
  data-ts="Tag"
  id="tag1"
/>
`;

exports[`Tooltip Basic usage 1`] = `
<div
  data-ts="Tooltip"
  id="tooltip-example"
>
  Tooltip will show on mouse hover.
</div>
`;

exports[`TsLogo Basic usage 1`] = `
<svg
  className="ts-logo"
  style={
    Object {
      "display": "inline-block",
      "height": "36px",
      "width": "36px",
    }
  }
  viewBox="0 0 36 36"
>
  <path
    d="M20 26V14H26V10H16V14V26H20Z"
    fill="black"
  />
  <path
    d="M14 10H10V14H14V10Z"
    fill="black"
  />
</svg>
`;
